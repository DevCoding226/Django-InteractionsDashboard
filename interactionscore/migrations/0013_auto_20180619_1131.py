# Generated by Django 2.0.6 on 2018-06-19 11:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import interactionscore.models


class Migration(migrations.Migration):

    dependencies = [
        ('interactionscore', '0012_auto_20180619_0732'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
                ('engagement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.EngagementPlan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EngagementListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engagement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.EngagementPlan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HCP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('institution_name', models.CharField(blank=True, max_length=255)),
                ('institution_address', models.TextField(blank=True)),
                ('contact_preference', models.CharField(blank=True, choices=[('email', 'Email'), ('phone', 'Phone')], max_length=255, null=True)),
                ('affiliate_groups', models.ManyToManyField(blank=True, related_name='hcps', to='interactionscore.AffiliateGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HCPDeliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('on_track', 'On Track'), ('slightly_behind', 'Slightly Behind'), ('major_issue', 'Major Issue')], max_length=255, null=True)),
                ('quarter', models.PositiveSmallIntegerField(choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='HCPObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engagement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.EngagementPlan')),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('purpose', models.TextField()),
                ('is_joint_visit', models.BooleanField(default=False, verbose_name='Joint visit')),
                ('joint_visit_with', models.TextField(blank=True)),
                ('origin_of_interaction', models.CharField(choices=[('option1', 'Option #1'), ('option2', 'Option #3'), ('other', 'Other')], max_length=255)),
                ('origin_of_interaction_other', models.CharField(blank=True, max_length=255)),
                ('is_adverse_event', models.BooleanField(default=False, verbose_name='Adverse event')),
                ('appropriate_procedures_followed', models.NullBooleanField(default=False)),
                ('is_follow_up_required', models.BooleanField(default=False, verbose_name='Follow up required')),
                ('hcp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interactionscore.HCP')),
                ('hcp_objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interactionscore.HCPObjective')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InteractionOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to=interactionscore.models.make_resource_filepath)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TherapeuticArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('resources', models.ManyToManyField(blank=True, related_name='tas', to='interactionscore.Resource')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='interaction',
            name='outcomes',
            field=models.ManyToManyField(blank=True, related_name='interactions', to='interactionscore.InteractionOutcome'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interactionscore.Project'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='interactions', to='interactionscore.Resource'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='user',
            field=models.ForeignKey(limit_choices_to={'groups__name': 'Role MSL'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='MSL'),
        ),
        migrations.AddField(
            model_name='hcpdeliverable',
            name='hcp_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCPObjective'),
        ),
        migrations.AddField(
            model_name='hcp',
            name='tas',
            field=models.ManyToManyField(blank=True, related_name='hcps', to='interactionscore.TherapeuticArea'),
        ),
        migrations.AddField(
            model_name='engagementlistitem',
            name='hcp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP'),
        ),
        migrations.AddField(
            model_name='comment',
            name='hcp_objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCPObjective'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='hcpdeliverable',
            unique_together={('quarter', 'hcp_objective')},
        ),
    ]
