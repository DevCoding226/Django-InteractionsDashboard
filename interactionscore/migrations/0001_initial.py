# Generated by Django 2.0.6 on 2018-06-26 18:16

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import interactionscore.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('business_title', models.CharField(blank=True, help_text='Business position title, eg. "Medical Manager"', max_length=255)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', interactionscore.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AffiliateGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EngagementPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('year', models.DateField(blank=True, default=datetime.date.today)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('list_all_ep', 'Can list all EPs'), ('list_own_ag_ep', 'Can list EPs of own AGs'), ('change_own_current_ep', 'Can change own current EP'), ('approve_all_ep', 'Can approve all EPs'), ('approve_own_ag_ep', 'Can approve EPs of own AGs')],
            },
        ),
        migrations.CreateModel(
            name='EngagementPlanHCPItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('engagement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hcp_items', to='interactionscore.EngagementPlan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EngagementPlanProjectItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('engagement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_items', to='interactionscore.EngagementPlan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HCP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('institution_name', models.CharField(blank=True, max_length=255)),
                ('institution_address', models.TextField(blank=True)),
                ('contact_preference', models.CharField(blank=True, choices=[('email', 'Email'), ('phone', 'Phone')], max_length=255, null=True)),
                ('affiliate_groups', models.ManyToManyField(blank=True, related_name='hcps', to='interactionscore.AffiliateGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HCPDeliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarter', models.PositiveSmallIntegerField(choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3'), (4, 'Q4')])),
                ('description', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(blank=True, choices=[('on_track', 'On Track'), ('slightly_behind', 'Slightly Behind'), ('major_issue', 'Major Issue')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HCPObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('engagement_plan_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='interactionscore.EngagementPlanHCPItem')),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('purpose', models.TextField()),
                ('is_joint_visit', models.BooleanField(default=False, verbose_name='Joint visit')),
                ('joint_visit_with', models.TextField(blank=True)),
                ('origin_of_interaction', models.CharField(choices=[('option1', 'Option #1'), ('option2', 'Option #3'), ('other', 'Other')], max_length=255)),
                ('origin_of_interaction_other', models.CharField(blank=True, max_length=255)),
                ('is_adverse_event', models.BooleanField(default=False, verbose_name='Adverse event')),
                ('appropriate_procedures_followed', models.NullBooleanField(default=False)),
                ('is_follow_up_required', models.BooleanField(default=False, verbose_name='Follow up required')),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP')),
                ('hcp_objective', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interactionscore.HCPObjective')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InteractionOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectDeliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarter', models.PositiveSmallIntegerField(choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3'), (4, 'Q4')])),
                ('description', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(blank=True, choices=[('on_track', 'On Track'), ('slightly_behind', 'Slightly Behind'), ('major_issue', 'Major Issue')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('engagement_plan_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='interactionscore.EngagementPlanProjectItem')),
                ('hcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to=interactionscore.models.make_resource_filepath)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TherapeuticArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('resources', models.ManyToManyField(blank=True, related_name='tas', to='interactionscore.Resource')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='projectdeliverable',
            name='objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliverables', to='interactionscore.ProjectObjective'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='outcomes',
            field=models.ManyToManyField(blank=True, related_name='interactions', to='interactionscore.InteractionOutcome'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interactionscore.Project'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='interactions', to='interactionscore.Resource'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='MSL'),
        ),
        migrations.AddField(
            model_name='hcpdeliverable',
            name='objective',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliverables', to='interactionscore.HCPObjective'),
        ),
        migrations.AddField(
            model_name='hcp',
            name='tas',
            field=models.ManyToManyField(blank=True, related_name='hcps', to='interactionscore.TherapeuticArea'),
        ),
        migrations.AddField(
            model_name='engagementplanprojectitem',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.Project'),
        ),
        migrations.AddField(
            model_name='engagementplanhcpitem',
            name='hcp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interactionscore.HCP'),
        ),
        migrations.AddField(
            model_name='comment',
            name='engagement_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='interactionscore.EngagementPlan'),
        ),
        migrations.AddField(
            model_name='comment',
            name='engagement_plan_hcp_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='interactionscore.EngagementPlanHCPItem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='engagement_plan_project_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='interactionscore.EngagementPlanProjectItem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='affiliate_groups',
            field=models.ManyToManyField(blank=True, related_name='users', to='interactionscore.AffiliateGroup'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='tas',
            field=models.ManyToManyField(blank=True, related_name='users', to='interactionscore.TherapeuticArea'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='projectdeliverable',
            unique_together={('quarter', 'objective')},
        ),
        migrations.AlterUniqueTogether(
            name='hcpdeliverable',
            unique_together={('quarter', 'objective')},
        ),
    ]
